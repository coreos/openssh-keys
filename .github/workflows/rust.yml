---
name: Rust
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  # Pinned toolchain for linting
  ACTIONS_LINTS_TOOLCHAIN: 1.64.0

jobs:
  tests-stable:
    name: "Tests, stable toolchain"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: cargo build
        run: cargo build
      - name: cargo test
        run: cargo test
  tests-release-stable:
    name: "Tests (release), stable toolchain"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: cargo build (release)
        run: cargo build --release
      - name: cargo test (release)
        run: cargo test --release
  tests-release-msrv:
    name: "Tests (release), minimum supported toolchain"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Detect crate MSRV
        run: |
          msrv=$(cargo metadata --format-version 1 --no-deps | \
              jq -r '.packages | .[].rust_version')
          echo "Crate MSRV: $msrv"
          echo "MSRV=$msrv" >> $GITHUB_ENV
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.MSRV }}
      - name: cargo build (release)
        run: cargo build --release
      - name: cargo test (release)
        run: cargo test --release
  linting:
    name: "Lints, pinned toolchain"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env['ACTIONS_LINTS_TOOLCHAIN']  }}
          components: rustfmt, clippy
      - name: cargo clippy (warnings)
        run: cargo clippy -- -D warnings
      - name: cargo fmt (check)
        run: cargo fmt -- --check -l
  tests-other-channels:
    name: "Tests, unstable toolchain"
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        channel:
          - "beta"
          - "nightly"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.channel }}
      - name: cargo build
        run: cargo build
      - name: cargo test
        run: cargo test
